@model List<DataTables.Mvc.Demo.Models.GridTestModel>
@using DataTables.Mvc.Core

@{
    ViewBag.Title = "Complex Data Prop";
}

<h2>Complex Data Prop</h2>

@Html.GridHtml("testGrid")

<br />
<h2>Grid from External Function</h2>
<br />

@Html.GridHtml("testGrid2")

@(Html.GridScriptForModel("#testGrid")
    .AddColumn(new Column().DataProperty("Id").Title("ID"))
    .AddColumn(new Column().DataProperty("Title").Title("Title"))
    .AddColumn(new Column().DataProperty(@"if (type === 'display' || type === 'filter') {
            return ""<b>Description: </b>"" + source[""Description""];
        }
        // 'sort' and 'type' both just use the raw data
        return source[""Description""];", true).Title("Description"))
      )

@(Html.GridScriptForModel("#testGrid2")
    .AddColumn(new Column().DataProperty("Id").Title("ID"))
    .AddColumn(new Column().DataProperty("Title").Title("Title"))
    .AddColumn(new Column().DataProperty("return descriptionMData(source, type, val);", true).Title("Description"))
)

<script type="text/javascript">
    function descriptionMData(source, type, val) {
        if (type === 'display' || type === 'filter') {
            return "<b>Description: </b>" + source["Description"] + " (External Function)";
        }
        // 'sort' and 'type' both just use the raw data
        return source["Description"];
    }
</script>